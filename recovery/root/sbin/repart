#!/sbin/sh
#
#


#
# Function will print usage instruction
#
print_usage_instruction()
{
echo " ";
echo "Dump info about partitions to /sdcard/partitions.log :";
echo "system_repart -d";
echo " ";
echo "Modify size of partitions :";
echo "system_repart -m";
echo " ";
echo "Restore size of partitions :";
echo "system_repart -r";
echo " ";

return 0
}


#
# Function will dump info about current partitions to /sdcard/partitions.log
#
dump_partitions_size()
{
echo "Dumping info about partitions...";
parted /dev/block/sda unit b p quit -> /sdcard/partitions.log

echo "-- Finished --";
return 0
}

#
# Functions used to work with partitions
#
partition_mounted() {
mount | grep -q " $1 ";
}

partition_umount() {
umount $1 >> /dev/null 2>&1 || umount -f $1 >> /dev/null 2>&1
}

partitions_umount() {
local list="$*"

local partition
for partition in $list; do
  partition_umount $partition
done

return 0
}

partitions_valid() {
local list="$*"

local partition
for partition in $list; do
  partition_mounted $partition && return 1
done

return 0
}


#
# Function will modify size of partitions
# /system partition will be increased to ~1444MB
# /cache partition will be decreased to ~255MB
#
modify_partitions_size()
{
echo " ";
echo "Modifying partitions...";

partitions_umount /sdcard /data /system
partitions_valid /sdcard /data /system
if [ $? -ne 0 ]; then
  echo "Error: Not all partitions unmounted!"
  return 1
fi

mkdir -p /tmp/backup
dd if=/dev/block/sda22 of=/tmp/backup/product_a.img
dd if=/dev/block/sda23 of=/tmp/backup/product_b.img

parted /dev/block/sda <<EOF
  print
  ok
  rm 20
  rm 21
  rm 22
  rm 23
  rm 24
  mkpart system_a 1710MB  5653MB                                   
  mkpart system_b 5653MB  9596MB                                   
  mkpart product_a 9596MB  10120MB                                 
  mkpart product_b 10120MB  10644MB                                
  mkpart userdata 10644MB  63.5GB 
  name 20 system_a                                                 
  name 21 system_b                                                 
  name 22 product_a                                                
  name 23 product_b                                                                                          
  name 24 userdata 
  quit
EOF

sleep 5

yes | mke2fs -t ext4 /dev/block/sda22
yes | mke2fs -t ext4 /dev/block/sda23
yes | mke2fs -t ext4 /dev/block/sda24

e2fsck -p -f /dev/block/sda22
e2fsck -p -f /dev/block/sda23
e2fsck -p -f /dev/block/sda24

dd if=/tmp/backup/product_a.img of=/dev/block/sda22
dd if=/tmp/backup/product_b.img of=/dev/block/sda23
rm -rf /tmp/backup/

echo "-- Finished --";
reboot recovery
return 0
}


#
# Function will restore size of partitions to stock setup
#
original_partitions_size()
{
echo " ";
echo "Restoring partitions...";

partitions_umount /sdcard /data /cache /system
partitions_valid /sdcard /data /cache /system
if [ $? -ne 0 ]; then
  echo "Error: Not all partitions unmounted!"
  return 1
fi

mkdir -p /tmp/backup
dd if=/dev/block/sda22 of=/tmp/backup/product_a.img
dd if=/dev/block/sda23 of=/tmp/backup/product_b.img

parted /dev/block/sda <<EOF
  print
  ok
  rm 20
  rm 21
  rm 22
  rm 23
  rm 24
  mkpart system_a 1710MB  4604MB
  mkpart system_b 4604MB  7498MB
  mkpart product_a 7498MB  8022MB
  mkpart product_b 8022MB  8546MB
  mkpart userdata 8546MB  63.5GB
  name 20 system_a                                                 
  name 21 system_b                                                 
  name 22 product_a                                                
  name 23 product_b                                                                                          
  name 24 userdata 
  quit
EOF

sleep 5

yes | mke2fs -t ext4 /dev/block/sda22
yes | mke2fs -t ext4 /dev/block/sda23
yes | mke2fs -t ext4 /dev/block/sda24

e2fsck -p -f /dev/block/sda22
e2fsck -p -f /dev/block/sda23
e2fsck -p -f /dev/block/sda24

dd if=/tmp/backup/product_a.img of=/dev/block/sda22
dd if=/tmp/backup/product_b.img of=/dev/block/sda23
rm -rf /tmp/backup/

echo "-- Finished --";
reboot recovery
return 0
}


if [ -z "$1" ]; then
  print_usage_instruction
  exit 0
fi

if [ "$1" == "-d" ]; then
  dump_partitions_size
  exit 0
fi

if [ "$1" == "-m" ]; then
    modify_partitions_size
  exit 0
fi

if [ "$1" == "-o" ]; then
    original_partitions_size
  exit 0
fi

print_usage_instruction
exit 0
